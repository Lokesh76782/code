LEX file:
%{
#include"y.tab.h"
%}
%%
[0-9]+ {yylval=atoi(yytext); return NUMBER;}
[a-zA-Z]+ {return ID;}
[\t]+ ;
[\n] {return yytext[0];}
. {return yytext[0];}
%%
int yywrap(void){
return 1;
}


YACC file:
%{
#include<stdio.h>
#include<stdlib.h>
int yyerror();
int yylex();
%}
%token NUMBER ID
%left '+''-'
%left '*''/'
%start S
%%
S: expr'\n' {printf("ans=%d\n",$$);}
;
expr: expr'+'expr {$$ = $1 + $3;}
|expr'-'expr {$$ = $1 - $3;}
|expr'*'expr {$$ = $1 * $3;}
|expr'/'expr {$$ = $1 / $3;}
|'('expr')' {$$ = $2;}
|NUMBER {$$ = $1;}
|ID
;
%%
int main()
{
printf("Enter the expression:\n");
yyparse();
return 0;
}
int yyerror(char *s)
{
printf("\nExpression is invalid\n");
printf("%s",s);
exit(1);
return 1;
}